"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const adminAuth_1 = require("../services/adminAuth");
const clientAuth_1 = require("../services/clientAuth");
const router = express_1.default.Router();
router.post("/admin/login", adminAuth_1.adminLogin);
router.post("/admin/register", adminAuth_1.adminRegister);
router.put("/admin/change-password&encrypted=:encrypted", adminAuth_1.adminChangePassword);
router.post("/client/login", clientAuth_1.clientLogin);
router.post("/client/register", clientAuth_1.clientRegister);
router.put("/client/change-password&encrypted=:encrypted", clientAuth_1.clientChangePassword);
router.post("/client/validate-email", clientAuth_1.validateEmail);
router.post("/client/validate-identification_number", clientAuth_1.validateIdentificationNumber);
router.get("/client/id=:id", clientAuth_1.getClientData);
router.put("/client/id=:id", clientAuth_1.editClientData);
router.put("/client/block_account=:action&id=:id", clientAuth_1.blockAccount);
router.put("/client/update_payment_data&id=:id", clientAuth_1.updateClientPaymentData);
router.get("/admin/id=:id", adminAuth_1.getAdminData);
router.put("/admin/id=:id", adminAuth_1.editAdminData);
router.post("/admin/register_success_email", adminAuth_1.registerAdminSuccessEmail);
router.post("/client/register_success_email", clientAuth_1.registerSuccessEmail);
router.post("/client/restore_password", clientAuth_1.restoreClientPasswordEmail);
router.post("/admin/restore_password", adminAuth_1.restoreAdminPasswordEmail);
router.get("/client/user_data&page=:page", clientAuth_1.getClientDataForTable);
router.post("/client/block_account_mail", clientAuth_1.accountBlockedNotificationEmail);
router.post("/client/unblock_account_mail", clientAuth_1.accountUnblockedNotificationEmail);
exports.default = router;
